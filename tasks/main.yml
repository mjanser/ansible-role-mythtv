---
- name: ensure packages are installed
  package:
    name: "{{ item }}"
  with_items:
    - xmltv
    - xmltv-grabbers
    - mythtv-backend
    - mythtv-setup
    - mythtv-docs
    - python-MythTV
    - dvb-apps
    - xinit
    - xorg-x11-server-Xorg
    - xorg-x11-drv-evdev
    - mesa-dri-drivers
    - liberation-sans-fonts

- name: ensure database user exists
  mysql_user:
    name: mythtv
    host: localhost
    password: "{{ mythtv_database_password }}"
    priv: "mythtv.*:ALL"

- name: ensure database exists
  mysql_db:
    name: mythtv
    encoding: utf8
    collation: utf8_general_ci
  register: mythtv_database_creation

- name: import database from backup
  mysql_db:
    name: mythtv
    state: import
    target: "{{ mythtv_restore_database }}"
  when: mythtv_database_creation.changed and mythtv_restore_database

- name: ensure directories exist
  file:
    dest: "/var/lib/mythtv/{{ item }}"
    state: directory
    owner: mythtv
    group: mythtv
    mode: 0755
  with_items:
    - channels
    - livetv
    - recordings
    - recordings_pretty
    - 3rd-party
    - themes

- name: ensure mythtv is configured
  template:
    src: config.xml.j2
    dest: /etc/mythtv/config.xml
    owner: root
    group: root
    mode: 0644

#- name: ensure user config directory is linked
#  file:
#    src: /etc/mythtv
#    dest: /var/lib/mythtv/.mythtv
#    state: link
#    force: yes

#- name: ensure channel icons directory is linked
#  file:
#    src: /var/lib/mythtv/channels
#    dest: /etc/mythtv/channels
#    state: link
#    force: yes

#- name: ensure cache/tmp directories exist
#  file:
#    dest: "/etc/mythtv/{{ item }}"
#    state: directory
#    owner: mythtv
#    group: mythtv
#    mode: 0755
#  with_items:
#    - tmp
#    - themecache
#    - cache

#- name: ensure host-specific cache directories are linked
#  file:
#    src: /etc/mythtv/cache
#    dest: "/etc/mythtv/Cache-{{ item }}-{{ ansible_nodename }}"
#    state: link
#    force: yes
#    owner: mythtv
#    group: mythtv
#  with_items:
#    - mythbackend
#    - mythtv-setup
#    - mythmetadatalookup

#- name: ensure cache/tmp directories are mounted as tmpfs
#  template:
#    src: tmpfs.mount.j2
#    dest: "/etc/systemd/system/{{ item.name }}.mount"
#    owner: root
#    group: root
#    mode: 644
#  with_items: "{{ mythtv_cache_directories }}"

#- name: ensure cache/tmp directory mounts are enabled
#  service:
#    name: "{{ item.name }}.mount"
#    enabled: yes
#    state: started
#  with_items: "{{ mythtv_cache_directories }}"

- name: ensure mythlink.pl is executable
  file:
    dest: /usr/share/doc/mythtv-docs/contrib/user_jobs/mythlink.pl
    state: file
    mode: "u+x,g+x,o+x"

- name: ensure anybody can start xinit
  lineinfile:
    dest: /etc/X11/Xwrapper.config
    regexp: "^allowed_users"
    line: "allowed_users = anybody"
    create: yes

- name: ensure service for mythtv-setup is installed
  copy:
    src: mythtv-setup.service
    dest: /etc/systemd/system/mythtv-setup.service
    owner: root
    group: root
    mode: 644

- name: ensure mythbackend is running
  service:
    name: mythbackend
    enabled: yes
    state: started
  failed_when: false

- name: ensure db optimize timer is enabled
  service:
    name: mythdb-optimize.timer
    enabled: yes

- include: mythweb.yml
  when: mythtv_mythweb

- include: backup.yml
  when: mythtv_backup
